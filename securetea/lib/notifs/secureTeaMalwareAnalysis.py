# !/bin/python
# -*- coding: utf-8 -*-
u"""SecureTea Social Engineering
Project:
    ╔═╗┌─┐┌─┐┬ ┬┬─┐┌─┐╔╦╗┌─┐┌─┐
    ╚═╗├┤ │  │ │├┬┘├┤  ║ ├┤ ├─┤
    ╚═╝└─┘└─┘└─┘┴└─└─┘ ╩ └─┘┴ ┴
    Author: Digvijay Bhosale <digvijayb1729@gmail.com> August 15 2021
    Version: 1.0
    Module: SecureTea
"""

import os
import json
import subprocess

from securetea.lib.malware_analysis.fileAnalysis import FileAnalyser
from securetea.lib.malware_analysis.malwareAnalysis import MalwareAnalysis
from securetea.lib.malware_analysis.continuous_malware_defence import ContinuousDefence
from securetea.lib.malware_analysis import globals
from securetea.lib.malware_analysis.mal_gui import app_runner


class SecureTeaMalwareAnalysis:
    def __init__(self, creds):
        self.mode = creds['mode']
        self.filename = creds['filename']
        self.virustotal_api_key = creds['virustotal_api_key']
        globals.initialize_colours()

    def runner(self):



        """
        if self.mode.lower() == 'i' or self.mode.lower() == 'm':
            while True:
                try:
                    self.filename = input("Enter Filename\n\t:")
                    if os.path.isfile(self.filename):
                        break
                    else:
                        print(globals.WARNING + 'Given Filename does not exist. ' + globals.END)
                except KeyboardInterrupt:
                    print(globals.WARNING + 'Keyboard Interrupt detected. Quitting .....' + globals.END)
                    exit(0)

        try:
            if self.mode.lower() == 'c' or self.mode.lower() == 'm':
                c = input('Check API_KEY Validity? (y/N)') or 'N'
                if c.lower() == 'y':
                    c1 = input('Checking API key will use up one request. Proceed with checking? (y/N)') or 'n'
                    if c1.lower() == 'y':
                        while True:
                            api_key = input("Enter API_KEY\n\t:")
                            validity_code = self.check_api_key(api_key=api_key)
                            if validity_code == 0:
                                print(globals.OKBLUE + "API KEY Valid" + globals.END)
                                self.api_key = api_key
                                break
                            elif validity_code == 1:
                                print(globals.FAIL + "API KEY Invalid" + globals.END)
                            elif validity_code == 2:
                                print(globals.WARNING + "secureta/lib/notifs/val_file/cat.jpg seems to be missing....\n"
                                      "If cat.jpg is missing, create a cat.jpg file (Download from the internet is easiest" + globals.END)
                            elif validity_code == 3:
                                print(globals.ALERT + "Some unknown error occurred" + globals.END)
                            else:
                                print(globals.ALERT + "Some error with the API Occurred" + globals.END)
                    else:
                        pass

                else:
                    print("Validity of API KEY will not be checked.")
                    self.api_key = input("Enter API_KEY\n\t:")
        except KeyboardInterrupt:
            print(globals.WARNING + 'Keyboard Interrupt detected. Quitting .....' + globals.END)
            exit(0)
        """

        if self.mode.lower() == 'c':
            GUI = True
            globals.initialize_flask()
            thread1 = ContinuousDefence(gui=GUI, API_KEY=self.api_key)

            # Start new Thread for MalwareAnalysis
            thread1.start()
            if GUI:
                app_runner()

            thread1.join()

        elif self.mode.lower() == 'i':
            f_analysis = FileAnalyser(self.filename)
            f_analysis.start_analysis()

        elif self.mode.lower() == 'm':
            m_analysis = MalwareAnalysis(filename=self.filename, API_KEY=self.api_key)
            m_analysis.runner()
        else:

            print(globals.WARNING + 'Incorrect option selected' + globals.END)
            return
        
        
"""
    def check_api_key(self, api_key):
        API_KEY = api_key
        filename = './val_file/cat.jpg'
        base_url = 'https://www.virustotal.com/api/v3/files'
        headers = 'x-apikey: ' + API_KEY
        file_path = '@' + filename

        process = subprocess.Popen(['curl', '--request', 'POST', '--url', base_url,
                                    '--header', headers,
                                    '--form', 'file=' + file_path],
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()
        data = stdout.decode('utf-8')
        stderr = stderr.decode('utf-8')
        try:
            json_data = json.loads(data)
        except json.decoder.JSONDecodeError:
            # file val_file/cat.jpg missing
            return 2
        # print(json_data.keys[1])
        if 'data' in json_data.keys():
            return 0
        elif 'error' in json_data.keys():
            if json_data['error']['code'] == 'WrongCredentialsError':
                return 1
        else:
            return 3
"""
